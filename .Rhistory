library(Lahman) # Our source data
library(tidyverse)  # "Metapackage," don't leave home without it!
library(psych)  # Descriptive stats
library(skimr)  # Data profiling
library(writexl) # Write to Excel -- data dump
library(openxlsx) # Write to Excel -- plus
data(package = 'Lahman')
head(Teams)
head(Salaries)
teams <- Teams %>%
select(yearID, teamID, name, attendance, W)
head(teams)
# Get the total annual salaries by team
payroll <- Salaries %>%
group_by(yearID, teamID) %>%
summarise(payroll = sum(salary))
head(payroll)
min(Teams$yearID)
min(payroll$yearID)
# Drop the years that don't have payroll data
teams_merged <- teams %>%
inner_join(payroll)
head(teams_merged)
sum(teams_merged$payroll) == sum(Salaries$salary)
# Shape
dim(teams_merged)
# Summary statistics
summary(teams_merged)
# Distribution of payrolls
ggplot(data = teams_merged, aes(x = payroll)) +
geom_histogram()
# What could be causing this?
# Distribution of wins
ggplot(data = teams_merged, aes(x = W)) +
geom_histogram()
# Relationship between payroll and attendance
ggplot(data = teams_merged, aes(x = payroll, y = attendance)) +
geom_point()
# Relationship between payroll and wins
ggplot(data = teams_merged, aes(x = payroll, y = W)) +
geom_point()
# What if we take the log of payrolls?
teams_merged$log_payroll <- log(teams_merged$payroll)
head(teams_merged)
# Relationship between payroll and attendance
ggplot(data = teams_merged, aes(x = log_payroll, y = attendance)) +
geom_point() +
geom_smooth(method = 'lm')
# What can this function do and not?
# Awesome Easter Egg
?write_xlsx
?openxlsx
